==11738== Memcheck, a memory error detector
==11738== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11738== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==11738== Command: treefree -0
==11738== 
Command: treefree -0
[0]0x5c45110->tree::tree(tree_ptr): parent=nullptr
[1]0x5c45220->tree::tree(tree_ptr): parent=[0]0x5c45110
[2]0x5c45410->tree::tree(tree_ptr): parent=[0]0x5c45110
[3]0x5c45660->tree::tree(tree_ptr): parent=[2]0x5c45410
[4]0x5c458b0->tree::tree(tree_ptr): parent=[2]0x5c45410
[5]0x5c45b00->tree::tree(tree_ptr): parent=[2]0x5c45410
[6]0x5c45cf0->tree::tree(tree_ptr): parent=[1]0x5c45220
[7]0x5c45f40->tree::tree(tree_ptr): parent=[1]0x5c45220
[8]0x5c46190->tree::tree(tree_ptr): parent=[1]0x5c45220
[seq]address: key -> value (use count)
void tree::print(size_t): [0]0x5c45110: ".." -> [0]0x5c45110 (4)
void tree::print(size_t): [0]0x5c45110: "bar" -> [2]0x5c45410 (4)
void tree::print(size_t):    [2]0x5c45410: ".." -> [0]0x5c45110 (4)
void tree::print(size_t):    [2]0x5c45410: "quuux" -> [5]0x5c45b00 (1)
void tree::print(size_t):       [5]0x5c45b00: ".." -> [2]0x5c45410 (4)
void tree::print(size_t):    [2]0x5c45410: "quux" -> [4]0x5c458b0 (1)
void tree::print(size_t):       [4]0x5c458b0: ".." -> [2]0x5c45410 (4)
void tree::print(size_t):    [2]0x5c45410: "qux" -> [3]0x5c45660 (1)
void tree::print(size_t):       [3]0x5c45660: ".." -> [2]0x5c45410 (4)
void tree::print(size_t): [0]0x5c45110: "foo" -> [1]0x5c45220 (4)
void tree::print(size_t):    [1]0x5c45220: ".." -> [0]0x5c45110 (4)
void tree::print(size_t):    [1]0x5c45220: "quuux" -> [8]0x5c46190 (1)
void tree::print(size_t):       [8]0x5c46190: ".." -> [1]0x5c45220 (4)
void tree::print(size_t):    [1]0x5c45220: "quux" -> [7]0x5c45f40 (1)
void tree::print(size_t):       [7]0x5c45f40: ".." -> [1]0x5c45220 (4)
void tree::print(size_t):    [1]0x5c45220: "qux" -> [6]0x5c45cf0 (1)
void tree::print(size_t):       [6]0x5c45cf0: ".." -> [1]0x5c45220 (4)
==11738== 
==11738== HEAP SUMMARY:
==11738==     in use at exit: 1,863 bytes in 35 blocks
==11738==   total heap usage: 40 allocs, 5 frees, 2,002 bytes allocated
==11738== 
==11738== LEAK SUMMARY:
==11738==    definitely lost: 72 bytes in 1 blocks
==11738==    indirectly lost: 1,764 bytes in 33 blocks
==11738==      possibly lost: 0 bytes in 0 blocks
==11738==    still reachable: 27 bytes in 1 blocks
==11738==                       of which reachable via heuristic:
==11738==                         stdstring          : 27 bytes in 1 blocks
==11738==         suppressed: 0 bytes in 0 blocks
==11738== Rerun with --leak-check=full to see details of leaked memory
==11738== 
==11738== For lists of detected and suppressed errors, rerun with: -s
==11738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
