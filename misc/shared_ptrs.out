==15738== Memcheck, a memory error detector
==15738== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15738== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==15738== Command: shared_ptrs
==15738== 
[65] sbox_ptr junk {make_shared<sbox> (":junk:")};
     sbox::sbox(const string&): 0x5c450b0:sbox(":junk:")
[66] junk = nullptr;
     sbox::~sbox(): 0x5c450b0:sbox(":junk:")
[67] sbox_ptr a {make_shared<sbox>()};
     sbox::sbox(): 0x5c45170:sbox("<EMPTY>")
[68] show_ptr(a);
     {0x5c45170,2} -> 0x5c45170:sbox("<EMPTY>")
[69] sbox_ptr b {make_shared<sbox> ("foobar")};
     sbox::sbox(const string&): 0x5c45230:sbox("foobar")
[70] auto single {make_shared<sbox> ("single")};
     sbox::sbox(const string&): 0x5c452f0:sbox("single")
[71] show_ptr(single);
     {0x5c452f0,2} -> 0x5c452f0:sbox("single")
[72] show_ptr(b);
     {0x5c45230,2} -> 0x5c45230:sbox("foobar")
[73] a = b;
     sbox::~sbox(): 0x5c45170:sbox("<EMPTY>")
[74] show_ptr(a);
     {0x5c45230,3} -> 0x5c45230:sbox("foobar")
[75] show_ptr(b);
     {0x5c45230,3} -> 0x5c45230:sbox("foobar")
[76] sbox_ptr c {a};
[77] show_ptr(c);
     {0x5c45230,4} -> 0x5c45230:sbox("foobar")
[78] b = nullptr;
[79] show_ptr(b);
     {0,0} -> nullptr
[80] show_ptr(a);
     {0x5c45230,3} -> 0x5c45230:sbox("foobar")
[81] return 0;
     sbox::~sbox(): 0x5c452f0:sbox("single")
     sbox::~sbox(): 0x5c45230:sbox("foobar")
==15738== 
==15738== HEAP SUMMARY:
==15738==     in use at exit: 0 bytes in 0 blocks
==15738==   total heap usage: 9 allocs, 9 frees, 251 bytes allocated
==15738== 
==15738== All heap blocks were freed -- no leaks are possible
==15738== 
==15738== For lists of detected and suppressed errors, rerun with: -s
==15738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
