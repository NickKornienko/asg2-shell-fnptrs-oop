==31833== Memcheck, a memory error detector
==31833== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==31833== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==31833== Command: ./yshell
==31833== 
yshell: Bad: no such command
==31833== 
==31833== HEAP SUMMARY:
==31833==     in use at exit: 277 bytes in 6 blocks
==31833==   total heap usage: 221 allocs, 215 frees, 7,519 bytes allocated
==31833== 
==31833== 277 (40 direct, 237 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 6
==31833==    at 0x4C2B788: operator new(unsigned long) (vg_replace_malloc.c:417)
==31833==    by 0x412CF9: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
==31833==    by 0x412438: allocate (allocator.h:197)
==31833==    by 0x412438: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:460)
==31833==    by 0x411DCF: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==31833==    by 0x4119C0: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(inode*&, std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:648)
==31833==    by 0x4117C3: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:1342)
==31833==    by 0x41145C: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr.h:409)
==31833==    by 0x410FEE: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:863)
==31833==    by 0x410C10: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:879)
==31833==    by 0x40FC57: inode_state::inode_state() (file_sys.cpp:57)
==31833==    by 0x41494A: main (main.cpp:54)
==31833== 
==31833== LEAK SUMMARY:
==31833==    definitely lost: 40 bytes in 1 blocks
==31833==    indirectly lost: 237 bytes in 5 blocks
==31833==      possibly lost: 0 bytes in 0 blocks
==31833==    still reachable: 0 bytes in 0 blocks
==31833==         suppressed: 0 bytes in 0 blocks
==31833== 
==31833== For lists of detected and suppressed errors, rerun with: -s
==31833== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
